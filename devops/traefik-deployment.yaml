---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
data:
  traefik.toml: |
      ################################################################
      # Kubernetes Ingress Provider
      ################################################################

      # Enable Kubernetes Ingress Provider.
      [kubernetes]

      # Kubernetes server endpoint.
      #
      # Optional for in-cluster configuration, required otherwise.
      # Default: empty
      #
      # endpoint = "http://localhost:8080"

      # Bearer token used for the Kubernetes client configuration.
      #
      # Optional
      # Default: empty
      #
      # token = "my token"

      # Path to the certificate authority file.
      # Used for the Kubernetes client configuration.
      #
      # Optional
      # Default: empty
      #
      # certAuthFilePath = "/my/ca.crt"

      # Array of namespaces to watch.
      #
      # Optional
      # Default: all namespaces (empty array).
      #
      # namespaces = ["default", "production"]

      # Ingress label selector to filter Ingress objects that should be processed.
      #
      # Optional
      # Default: empty (process all Ingresses)
      #
      #labelselector = "A and not B"

      # Value of `kubernetes.io/ingress.class` annotation that identifies Ingress objects to be processed.
      # If the parameter is non-empty, only Ingresses containing an annotation with the same value are processed.
      # Otherwise, Ingresses missing the annotation, having an empty value, or the value `traefik` are processed.
      #
      # Optional
      # Default: empty
      #
      # ingressClass = "traefik-internal"

      # Disable PassHost Headers.
      #
      # Optional
      # Default: false
      #
      # disablePassHostHeaders = true

      # Enable PassTLSCert Headers.
      #
      # Optional
      # Default: false
      #
      # enablePassTLSCert = true

      # Override default configuration template.
      #
      # Optional
      # Default: <built-in template>
      #
      # filename = "kubernetes.tmpl"

      # Enable IngressEndpoint configuration.
      # This will allow Traefik to update the status section of ingress objects, if desired.
      #
      # Optional
      #
      # [kubernetes.ingressEndpoint]
      #
      # At least one must be configured.
      # `publishedservice` will override the `hostname` and `ip` settings if configured.
      #
      # hostname = "localhost"
      # ip = "127.0.0.1"
      # publishedService = "namespace/servicename"
      [metrics]

        # To enable Traefik to export internal metrics to Prometheus
        [metrics.prometheus]

          # Name of the related entry point
          #
          # Optional
          # Default: "traefik"
          #
          entryPoint = "metrics"

          # Buckets for latency metrics
          #
          # Optional
          # Default: [0.1, 0.3, 1.2, 5]
          #
          buckets = [0.1,0.3,1.2,5.0]
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      volumes:
      - name: config
        configMap:
          name: traefik-ingress-controller
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik
        name: traefik-ingress-lb
        ports:
        - name: http
          containerPort: 80
        - name: admin
          containerPort: 8080
        volumeMounts:
        - mountPath: /config
          name: config
        readinessProbe:
          tcpSocket:
            port: 80
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        livenessProbe:
          tcpSocket:
            port: 80
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        args:
        - --api
        - --kubernetes
        - --logLevel=DEBUG
        - --configfile=/config/traefik.toml
